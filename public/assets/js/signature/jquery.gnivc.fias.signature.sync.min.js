!function() {
    if (!window.cadesplugin) {
        var pluginObject, plugin_resolved = 0, plugin_reject, plugin_resolve, isOpera = 0, isFireFox = 0, isEdge = 0, isSafari = 0, failed_extensions = 0, canPromise = !!window.Promise, cadesplugin;
        cadesplugin = canPromise ? new Promise((function(e, i) {
            plugin_resolve = e,
            plugin_reject = i
        }
        )) : {};
        var browserSpecs = check_browser()
          , ru_cryptopro_npcades_10_native_bridge = {
            callbacksCount: 1,
            callbacks: {},
            resultForCallback: function(e, i) {
                var t = ru_cryptopro_npcades_10_native_bridge.callbacks[e];
                t && t.apply(null, i)
            },
            call: function(e, i, t) {
                var n = t && "function" == typeof t
                  , a = n ? ru_cryptopro_npcades_10_native_bridge.callbacksCount++ : 0;
                n && (ru_cryptopro_npcades_10_native_bridge.callbacks[a] = t);
                var r = document.createElement("IFRAME")
                  , s = new Array("_CPNP_handle");
                try {
                    r.setAttribute("src", "cpnp-js-call:" + e + ":" + a + ":" + encodeURIComponent(JSON.stringify(i, s)))
                } catch (e) {
                    alert(e)
                }
                document.documentElement.appendChild(r),
                r.parentNode.removeChild(r),
                r = null
            }
        };
        cadesplugin.JSModuleVersion = "2.2.0",
        cadesplugin.async_spawn = async_spawn,
        cadesplugin.set = set_pluginObject,
        cadesplugin.set_log_level = set_log_level,
        cadesplugin.getLastError = getLastError,
        cadesplugin.is_capilite_enabled = is_capilite_enabled,
        isNativeMessageSupported() && (cadesplugin.CreateObjectAsync = CreateObjectAsync,
        cadesplugin.ReleasePluginObjects = ReleasePluginObjects),
        isNativeMessageSupported() || (cadesplugin.CreateObject = CreateObject),
        window.cadesplugin_load_timeout ? setTimeout(check_load_timeout, window.cadesplugin_load_timeout) : setTimeout(check_load_timeout, 2e4),
        set_constantValues(),
        cadesplugin.current_log_level = cadesplugin.LOG_LEVEL_ERROR,
        window.cadesplugin = cadesplugin,
        check_plugin_working()
    }
    function check_browser() {
        var e, i = navigator.userAgent, t = i.match(/(opera|chrome|safari|firefox|msie|trident(?=\/))\/?\s*(\d+)/i) || [];
        return /trident/i.test(t[1]) ? {
            name: "IE",
            version: (e = /\brv[ :]+(\d+)/g.exec(i) || [])[1] || ""
        } : "Chrome" === t[1] && null != (e = i.match(/\b(OPR|Edge)\/(\d+)/)) ? {
            name: e[1].replace("OPR", "Opera"),
            version: e[2]
        } : (t = t[2] ? [t[1], t[2]] : [navigator.appName, navigator.appVersion, "-?"],
        null != (e = i.match(/version\/(\d+)/i)) && t.splice(1, 1, e[1]),
        {
            name: t[0],
            version: t[1]
        })
    }
    function cpcsp_console_log(e, i) {
        if ("undefined" != typeof console)
            return e <= cadesplugin.current_log_level ? (e === cadesplugin.LOG_LEVEL_DEBUG && console.log("DEBUG: %s", i),
            e === cadesplugin.LOG_LEVEL_INFO && console.info("INFO: %s", i),
            void (e === cadesplugin.LOG_LEVEL_ERROR && console.error("ERROR: %s", i))) : void 0
    }
    function set_log_level(e) {
        e === cadesplugin.LOG_LEVEL_DEBUG || e === cadesplugin.LOG_LEVEL_INFO || e === cadesplugin.LOG_LEVEL_ERROR ? (cadesplugin.current_log_level = e,
        cadesplugin.current_log_level === cadesplugin.LOG_LEVEL_DEBUG && cpcsp_console_log(cadesplugin.LOG_LEVEL_INFO, "cadesplugin_api.js: log_level = DEBUG"),
        cadesplugin.current_log_level === cadesplugin.LOG_LEVEL_INFO && cpcsp_console_log(cadesplugin.LOG_LEVEL_INFO, "cadesplugin_api.js: log_level = INFO"),
        cadesplugin.current_log_level === cadesplugin.LOG_LEVEL_ERROR && cpcsp_console_log(cadesplugin.LOG_LEVEL_INFO, "cadesplugin_api.js: log_level = ERROR"),
        isNativeMessageSupported() && (cadesplugin.current_log_level === cadesplugin.LOG_LEVEL_DEBUG && window.postMessage("set_log_level=debug", "*"),
        cadesplugin.current_log_level === cadesplugin.LOG_LEVEL_INFO && window.postMessage("set_log_level=info", "*"),
        cadesplugin.current_log_level === cadesplugin.LOG_LEVEL_ERROR && window.postMessage("set_log_level=error", "*"))) : cpcsp_console_log(cadesplugin.LOG_LEVEL_ERROR, "cadesplugin_api.js: Incorrect log_level: " + e)
    }
    function set_constantValues() {
        cadesplugin.CAPICOM_LOCAL_MACHINE_STORE = 1,
        cadesplugin.CAPICOM_CURRENT_USER_STORE = 2,
        cadesplugin.CADESCOM_LOCAL_MACHINE_STORE = 1,
        cadesplugin.CADESCOM_CURRENT_USER_STORE = 2,
        cadesplugin.CADESCOM_CONTAINER_STORE = 100,
        cadesplugin.CAPICOM_MY_STORE = "My",
        cadesplugin.CAPICOM_STORE_OPEN_MAXIMUM_ALLOWED = 2,
        cadesplugin.CAPICOM_CERTIFICATE_FIND_SUBJECT_NAME = 1,
        cadesplugin.CADESCOM_XML_SIGNATURE_TYPE_ENVELOPED = 0,
        cadesplugin.CADESCOM_XML_SIGNATURE_TYPE_ENVELOPING = 1,
        cadesplugin.CADESCOM_XML_SIGNATURE_TYPE_TEMPLATE = 2,
        cadesplugin.XmlDsigGost3410UrlObsolete = "http://www.w3.org/2001/04/xmldsig-more#gostr34102001-gostr3411",
        cadesplugin.XmlDsigGost3411UrlObsolete = "http://www.w3.org/2001/04/xmldsig-more#gostr3411",
        cadesplugin.XmlDsigGost3410Url = "urn:ietf:params:xml:ns:cpxmlsec:algorithms:gostr34102001-gostr3411",
        cadesplugin.XmlDsigGost3411Url = "urn:ietf:params:xml:ns:cpxmlsec:algorithms:gostr3411",
        cadesplugin.CADESCOM_CADES_DEFAULT = 0,
        cadesplugin.CADESCOM_CADES_BES = 1,
        cadesplugin.CADESCOM_CADES_T = 5,
        cadesplugin.CADESCOM_CADES_X_LONG_TYPE_1 = 93,
        cadesplugin.CADESCOM_PKCS7_TYPE = 65535,
        cadesplugin.CADESCOM_ENCODE_BASE64 = 0,
        cadesplugin.CADESCOM_ENCODE_BINARY = 1,
        cadesplugin.CADESCOM_ENCODE_ANY = -1,
        cadesplugin.CAPICOM_CERTIFICATE_INCLUDE_CHAIN_EXCEPT_ROOT = 0,
        cadesplugin.CAPICOM_CERTIFICATE_INCLUDE_WHOLE_CHAIN = 1,
        cadesplugin.CAPICOM_CERTIFICATE_INCLUDE_END_ENTITY_ONLY = 2,
        cadesplugin.CAPICOM_CERT_INFO_SUBJECT_SIMPLE_NAME = 0,
        cadesplugin.CAPICOM_CERT_INFO_ISSUER_SIMPLE_NAME = 1,
        cadesplugin.CAPICOM_CERTIFICATE_FIND_SHA1_HASH = 0,
        cadesplugin.CAPICOM_CERTIFICATE_FIND_SUBJECT_NAME = 1,
        cadesplugin.CAPICOM_CERTIFICATE_FIND_ISSUER_NAME = 2,
        cadesplugin.CAPICOM_CERTIFICATE_FIND_ROOT_NAME = 3,
        cadesplugin.CAPICOM_CERTIFICATE_FIND_TEMPLATE_NAME = 4,
        cadesplugin.CAPICOM_CERTIFICATE_FIND_EXTENSION = 5,
        cadesplugin.CAPICOM_CERTIFICATE_FIND_EXTENDED_PROPERTY = 6,
        cadesplugin.CAPICOM_CERTIFICATE_FIND_APPLICATION_POLICY = 7,
        cadesplugin.CAPICOM_CERTIFICATE_FIND_CERTIFICATE_POLICY = 8,
        cadesplugin.CAPICOM_CERTIFICATE_FIND_TIME_VALID = 9,
        cadesplugin.CAPICOM_CERTIFICATE_FIND_TIME_NOT_YET_VALID = 10,
        cadesplugin.CAPICOM_CERTIFICATE_FIND_TIME_EXPIRED = 11,
        cadesplugin.CAPICOM_CERTIFICATE_FIND_KEY_USAGE = 12,
        cadesplugin.CAPICOM_DIGITAL_SIGNATURE_KEY_USAGE = 128,
        cadesplugin.CAPICOM_PROPID_ENHKEY_USAGE = 9,
        cadesplugin.CAPICOM_OID_OTHER = 0,
        cadesplugin.CAPICOM_OID_KEY_USAGE_EXTENSION = 10,
        cadesplugin.CAPICOM_EKU_CLIENT_AUTH = 2,
        cadesplugin.CAPICOM_EKU_SMARTCARD_LOGON = 5,
        cadesplugin.CAPICOM_EKU_OTHER = 0,
        cadesplugin.CAPICOM_AUTHENTICATED_ATTRIBUTE_SIGNING_TIME = 0,
        cadesplugin.CAPICOM_AUTHENTICATED_ATTRIBUTE_DOCUMENT_NAME = 1,
        cadesplugin.CAPICOM_AUTHENTICATED_ATTRIBUTE_DOCUMENT_DESCRIPTION = 2,
        cadesplugin.CADESCOM_AUTHENTICATED_ATTRIBUTE_SIGNING_TIME = 0,
        cadesplugin.CADESCOM_AUTHENTICATED_ATTRIBUTE_DOCUMENT_NAME = 1,
        cadesplugin.CADESCOM_AUTHENTICATED_ATTRIBUTE_DOCUMENT_DESCRIPTION = 2,
        cadesplugin.CADESCOM_ATTRIBUTE_OTHER = -1,
        cadesplugin.CADESCOM_STRING_TO_UCS2LE = 0,
        cadesplugin.CADESCOM_BASE64_TO_BINARY = 1,
        cadesplugin.CADESCOM_DISPLAY_DATA_NONE = 0,
        cadesplugin.CADESCOM_DISPLAY_DATA_CONTENT = 1,
        cadesplugin.CADESCOM_DISPLAY_DATA_ATTRIBUTE = 2,
        cadesplugin.CADESCOM_ENCRYPTION_ALGORITHM_RC2 = 0,
        cadesplugin.CADESCOM_ENCRYPTION_ALGORITHM_RC4 = 1,
        cadesplugin.CADESCOM_ENCRYPTION_ALGORITHM_DES = 2,
        cadesplugin.CADESCOM_ENCRYPTION_ALGORITHM_3DES = 3,
        cadesplugin.CADESCOM_ENCRYPTION_ALGORITHM_AES = 4,
        cadesplugin.CADESCOM_ENCRYPTION_ALGORITHM_GOST_28147_89 = 25,
        cadesplugin.CADESCOM_HASH_ALGORITHM_SHA1 = 0,
        cadesplugin.CADESCOM_HASH_ALGORITHM_MD2 = 1,
        cadesplugin.CADESCOM_HASH_ALGORITHM_MD4 = 2,
        cadesplugin.CADESCOM_HASH_ALGORITHM_MD5 = 3,
        cadesplugin.CADESCOM_HASH_ALGORITHM_SHA_256 = 4,
        cadesplugin.CADESCOM_HASH_ALGORITHM_SHA_384 = 5,
        cadesplugin.CADESCOM_HASH_ALGORITHM_SHA_512 = 6,
        cadesplugin.CADESCOM_HASH_ALGORITHM_CP_GOST_3411 = 100,
        cadesplugin.CADESCOM_HASH_ALGORITHM_CP_GOST_3411_2012_256 = 101,
        cadesplugin.CADESCOM_HASH_ALGORITHM_CP_GOST_3411_2012_512 = 102,
        cadesplugin.CADESCOM_HASH_ALGORITHM_CP_GOST_3411_HMAC = 110,
        cadesplugin.CADESCOM_HASH_ALGORITHM_CP_GOST_3411_2012_256_HMAC = 111,
        cadesplugin.CADESCOM_HASH_ALGORITHM_CP_GOST_3411_2012_512_HMAC = 112,
        cadesplugin.LOG_LEVEL_DEBUG = 4,
        cadesplugin.LOG_LEVEL_INFO = 2,
        cadesplugin.LOG_LEVEL_ERROR = 1,
        cadesplugin.CADESCOM_AllowNone = 0,
        cadesplugin.CADESCOM_AllowNoOutstandingRequest = 1,
        cadesplugin.CADESCOM_AllowUntrustedCertificate = 2,
        cadesplugin.CADESCOM_AllowUntrustedRoot = 4,
        cadesplugin.CADESCOM_SkipInstallToStore = 268435456
    }
    function async_spawn(e) {
        function i(e, i) {
            var r;
            try {
                r = t[e](i)
            } catch (e) {
                return Promise.reject(e)
            }
            return r.done ? r.value : Promise.resolve(r.value).then(n, a)
        }
        var t = e(Array.prototype.slice.call(arguments, 1))
          , n = i.bind(i, "next")
          , a = i.bind(i, "throw");
        return n()
    }
    function isIE() {
        return "IE" === browserSpecs.name || "MSIE" === browserSpecs.name
    }
    function isIOS() {
        return navigator.userAgent.match(/ipod/i) || navigator.userAgent.match(/ipad/i) || navigator.userAgent.match(/iphone/i)
    }
    function isNativeMessageSupported() {
        return !isIE() && ("Edge" === browserSpecs.name ? (isEdge = !0,
        !0) : "Opera" === browserSpecs.name ? (isOpera = !0,
        browserSpecs.version >= 33) : "Firefox" === browserSpecs.name ? (isFireFox = !0,
        browserSpecs.version >= 52) : "Chrome" === browserSpecs.name ? browserSpecs.version >= 42 : "Safari" === browserSpecs.name ? (isSafari = !0,
        browserSpecs.version >= 12) : void 0)
    }
    function CreateObject(e) {
        if (isIOS())
            return call_ru_cryptopro_npcades_10_native_bridge("CreateObject", [e]);
        if (isIE()) {
            if (e.match(/X509Enrollment/i))
                try {
                    return document.getElementById("webClassFactory").CreateObject(e)
                } catch (i) {
                    try {
                        return document.getElementById("certEnrollClassFactory").CreateObject(e)
                    } catch (e) {
                        throw "Для создания обьектов X509Enrollment следует настроить веб-узел на использование проверки подлинности по протоколу HTTPS"
                    }
                }
            try {
                return document.getElementById("webClassFactory").CreateObject(e)
            } catch (i) {
                return new ActiveXObject(e)
            }
        }
        return pluginObject.CreateObject(e)
    }
    function decimalToHexString(e) {
        return e < 0 && (e = 4294967295 + e + 1),
        e.toString(16).toUpperCase()
    }
    function GetMessageFromException(e) {
        var i = e.message;
        return i ? e.number && (i += " (0x" + decimalToHexString(e.number) + ")") : i = e,
        i
    }
    function getLastError(e) {
        if (isNativeMessageSupported() || isIE() || isIOS())
            return GetMessageFromException(e);
        try {
            return pluginObject.getLastError()
        } catch (i) {
            return GetMessageFromException(e)
        }
    }
    function ReleasePluginObjects() {
        return cpcsp_chrome_nmcades.ReleasePluginObjects()
    }
    function CreateObjectAsync(e) {
        return pluginObject.CreateObjectAsync(e)
    }
    function call_ru_cryptopro_npcades_10_native_bridge(functionName, array) {
        var tmpobj, ex;
        if (ru_cryptopro_npcades_10_native_bridge.call(functionName, array, (function(e, response) {
            ex = e;
            var str = "tmpobj=" + response;
            eval(str),
            "string" == typeof tmpobj && (tmpobj = tmpobj.replace(/\\\n/gm, "\n"),
            tmpobj = tmpobj.replace(/\\\r/gm, "\r"))
        }
        )),
        ex)
            throw ex;
        return tmpobj
    }
    function show_firefox_missing_extension_dialog() {
        if (!window.cadesplugin_skip_extension_install) {
            var e = document.createElement("div");
            e.id = "cadesplugin_ovr",
            e.style = "visibility: hidden; position: fixed; left: 0px; top: 0px; width:100%; height:100%; background-color: rgba(0,0,0,0.7)",
            e.innerHTML = "<div id='cadesplugin_ovr_item' style='position:relative; width:400px; margin:100px auto; background-color:#fff; border:2px solid #000; padding:10px; text-align:center; opacity: 1; z-index: 1500'><button id='cadesplugin_close_install' style='float: right; font-size: 10px; background: transparent; border: 1; margin: -5px'>X</button><p>Для работы КриптоПро ЭЦП Browser plugin на данном сайте необходимо расширение для браузера. Убедитесь, что оно у Вас включено или установите его.<p><a href='https://www.cryptopro.ru/sites/default/files/products/cades/extensions/firefox_cryptopro_extension_latest.xpi'>Скачать расширение</a></p></div>",
            document.getElementsByTagName("Body")[0].appendChild(e),
            document.getElementById("cadesplugin_close_install").addEventListener("click", (function() {
                plugin_loaded_error("Плагин недоступен"),
                document.getElementById("cadesplugin_ovr").style.visibility = "hidden"
            }
            )),
            e.addEventListener("click", (function() {
                plugin_loaded_error("Плагин недоступен"),
                document.getElementById("cadesplugin_ovr").style.visibility = "hidden"
            }
            )),
            e.style.visibility = "visible"
        }
    }
    function firefox_or_edge_nmcades_onload() {
        cpcsp_chrome_nmcades.check_chrome_plugin(plugin_loaded, plugin_loaded_error)
    }
    function nmcades_api_onload() {
        window.postMessage("cadesplugin_echo_request", "*"),
        window.addEventListener("message", (function(e) {
            if ("string" == typeof e.data && e.data.match("cadesplugin_loaded"))
                if (isFireFox || isEdge || isSafari) {
                    var i = e.data.substring(e.data.indexOf("url:") + 4)
                      , t = document.createElement("script");
                    t.setAttribute("type", "text/javascript"),
                    t.setAttribute("src", i),
                    t.onerror = plugin_loaded_error,
                    t.onload = firefox_or_edge_nmcades_onload,
                    document.getElementsByTagName("head")[0].appendChild(t),
                    failed_extensions++
                } else
                    cpcsp_chrome_nmcades.check_chrome_plugin(plugin_loaded, plugin_loaded_error)
        }
        ), !1)
    }
    function load_extension() {
        if (isFireFox || isEdge || isSafari)
            nmcades_api_onload();
        else {
            var e = document.createElement("script");
            e.setAttribute("type", "text/javascript"),
            e.setAttribute("src", "chrome-extension://iifchhfnnmpdbibifmljnfjhpififfog/nmcades_plugin_api.js"),
            e.onerror = plugin_loaded_error,
            e.onload = nmcades_api_onload,
            document.getElementsByTagName("head")[0].appendChild(e),
            (e = document.createElement("script")).setAttribute("type", "text/javascript"),
            e.setAttribute("src", "chrome-extension://epebfcehmdedogndhlcacafjaacknbcm/nmcades_plugin_api.js"),
            e.onerror = plugin_loaded_error,
            e.onload = nmcades_api_onload,
            document.getElementsByTagName("head")[0].appendChild(e)
        }
    }
    function load_npapi_plugin() {
        var e = document.createElement("object");
        if (e.setAttribute("id", "cadesplugin_object"),
        e.setAttribute("type", "application/x-cades"),
        e.setAttribute("style", "visibility: hidden"),
        document.getElementsByTagName("body")[0].appendChild(e),
        pluginObject = document.getElementById("cadesplugin_object"),
        isIE()) {
            var i = document.createElement("object");
            i.setAttribute("id", "certEnrollClassFactory"),
            i.setAttribute("classid", "clsid:884e2049-217d-11da-b2a4-000e7bbb2b09"),
            i.setAttribute("style", "visibility: hidden"),
            document.getElementsByTagName("body")[0].appendChild(i);
            var t = document.createElement("object");
            t.setAttribute("id", "webClassFactory"),
            t.setAttribute("classid", "clsid:B04C8637-10BD-484E-B0DA-B8A039F60024"),
            t.setAttribute("style", "visibility: hidden"),
            document.getElementsByTagName("body")[0].appendChild(t)
        }
    }
    function plugin_loaded() {
        plugin_resolved = 1,
        canPromise ? plugin_resolve() : window.postMessage("cadesplugin_loaded", "*")
    }
    function plugin_loaded_error(e) {
        isNativeMessageSupported() && ++failed_extensions < 2 || (void 0 !== e && "object" != typeof e || (e = "Плагин недоступен"),
        plugin_resolved = 1,
        canPromise ? plugin_reject(e) : window.postMessage("cadesplugin_load_error", "*"))
    }
    function check_load_timeout() {
        1 !== plugin_resolved && (isFireFox && show_firefox_missing_extension_dialog(),
        plugin_resolved = 1,
        canPromise ? plugin_reject("Истекло время ожидания загрузки плагина") : window.postMessage("cadesplugin_load_error", "*"))
    }
    function createPromise(e) {
        return new Promise(e)
    }
    function check_npapi_plugin() {
        try {
            CreateObject("CAdESCOM.About");
            plugin_loaded()
        } catch (i) {
            document.getElementById("cadesplugin_object").style.display = "none";
            var e = navigator.mimeTypes["application/x-cades"];
            if (e)
                plugin_loaded_error(e.enabledPlugin ? "Плагин загружен, но не создаются обьекты" : "Ошибка при загрузке плагина");
            else
                plugin_loaded_error("Плагин недоступен")
        }
    }
    function check_plugin_working() {
        var e = document.createElement("div");
        e.innerHTML = "\x3c!--[if lt IE 9]><i></i><![endif]--\x3e",
        1 === e.getElementsByTagName("i").length ? plugin_loaded_error("Internet Explorer версии 8 и ниже не поддерживается") : isNativeMessageSupported() ? load_extension() : canPromise ? "complete" === document.readyState ? (load_npapi_plugin(),
        check_npapi_plugin()) : window.addEventListener("load", (function(e) {
            load_npapi_plugin(),
            check_npapi_plugin()
        }
        ), !1) : window.addEventListener("message", (function(e) {
            "cadesplugin_echo_request" === e.data && (load_npapi_plugin(),
            check_npapi_plugin())
        }
        ), !1)
    }
    function set_pluginObject(e) {
        pluginObject = e
    }
    function is_capilite_enabled() {
        return !(void 0 === cadesplugin.EnableInternalCSP || !cadesplugin.EnableInternalCSP)
    }
}(),
function(e) {
    e.Gnivc = e.Gnivc || {},
    e.Gnivc.Fias = e.Gnivc.Fias || {},
    e.Gnivc.Fias.Certificate = function(i) {
        this.cert = i,
        this.certFromDate = e.Gnivc.Fias.Signature.ConvertDate(new Date(this.cert.ValidFromDate)),
        this.certTillDate = e.Gnivc.Fias.Signature.ConvertDate(new Date(this.cert.ValidToDate))
    }
    ,
    e.Gnivc.Fias.Certificate.prototype.IsValid = function(i) {
        var t = e.Gnivc.Fias.Signature.ConvertDate(new Date);
        return null == e.Gnivc.Fias.Signature._settings.Hashes[this.cert.PublicKey_Algorithm_OID] ? (i.addClass(e.Gnivc.Fias.Signature._settings.Style.InvalidCertificate).attr("title", "Алгоритм данного сертификата не поддерживается"),
        !1) : this.cert.HasPrivateKey ? !(t > this.certTillDate) || (i.addClass(e.Gnivc.Fias.Signature._settings.Style.InvalidCertificate).attr("title", "Данный сертификат просрочен"),
        !1) : (i.addClass(e.Gnivc.Fias.Signature._settings.Style.InvalidCertificate).attr("title", "У данного сертификата нет закрытого ключа"),
        !1)
    }
    ,
    e.Gnivc.Fias.Certificate.prototype.parseDN = function(i) {
        for (var t = 0, n = {}, a = "", r = "", s = !1; t < i.length; )
            if ('"' != i[t])
                "=" != i[t] ? "," != i[t] || 0 != s ? (r += i[t],
                t++) : (n[a] = e.trim(r),
                a = "",
                r = "",
                t++) : (a = e.trim(r),
                r = "",
                t++);
            else {
                if (s) {
                    s = !1,
                    t++;
                    continue
                }
                s = !0,
                t++
            }
        return "" != a && "" != r && (n[a] = e.trim(r)),
        n
    }
    ,
    e.Gnivc.Fias.Certificate.prototype.DateTimePutTogether = function(e) {
        return this.check(e.getDate()) + "." + this.check(e.getMonth() + 1) + "." + e.getFullYear() + " " + this.check(e.getHours()) + ":" + this.check(e.getMinutes()) + ":" + this.check(e.getSeconds())
    }
    ,
    e.Gnivc.Fias.Certificate.prototype.GetPubKeyAlgorithm = function() {
        return this.cert.PublicKey_Algorithm_FriendlyName
    }
    ,
    e.Gnivc.Fias.Certificate.prototype.GetPrivateKeyProviderName = function() {
        return this.cert.PrivateKey_ProviderName
    }
    ,
    e.Gnivc.Fias.Certificate.prototype.GetCertName = function() {
        return this.parseDN(this.cert.SubjectName).CN
    }
    ,
    e.Gnivc.Fias.Certificate.prototype.GetIssuer = function() {
        return this.parseDN(this.cert.IssuerName).CN
    }
    ,
    e.Gnivc.Fias.Certificate.prototype.GetCertFromDate = function() {
        return this.DateTimePutTogether(this.certFromDate)
    }
    ,
    e.Gnivc.Fias.Certificate.prototype.GetCertTillDate = function() {
        return this.DateTimePutTogether(this.certTillDate)
    }
    ,
    e.Gnivc.Fias.Certificate.prototype.check = function(e) {
        return e < 10 ? "0" + e : e
    }
    ,
    e.Gnivc.Fias.Certificate.prototype.Thumbprint = function() {
        return this.cert.Thumbprint
    }
    ,
    e.Gnivc.Fias.Certificate.prototype.GetPubKeyAlgorithmOID = function() {
        return this.cert.PublicKey_Algorithm_OID
    }
    ,
    e.Gnivc.Fias.Certificate.prototype.Base64String = function() {
        return this.cert.Base64String
    }
}(jQuery),
function(e) {
    function i(i) {
        e("." + e.Gnivc.Fias.Signature._settings.Style.ModalWindowCertificateListWrapper).hide(),
        e.Gnivc.Fias.Signature._settings.onCertificateSelectorClosed()
    }
    function t(i) {
        e.ajax({
            url: "Signature/Hashes",
            type: "GET",
            dataType: "json",
            success: function(i, t, n) {
                e.Gnivc.Fias.Signature._settings.HashesToSign = i,
                setTimeout((function() {
                    s()
                }
                ), 100)
            },
            error: function(i, t, n) {
                e.Gnivc.Fias.Signature.ShowError("Ошибка обновления хэш-значений"),
                location.reload()
            }
        }),
        s()
    }
    function n(i) {
        e.Gnivc.Fias.Signature.CloseCertificateSelector(),
        e("." + e.Gnivc.Fias.Signature._settings.Style.SelectButton).hide(),
        e.Gnivc.Fias.Signature.ShowModalMessage("Ваша подпись создается...");
        var t = e("." + e.Gnivc.Fias.Signature._settings.Style.CertificateList + " li." + e.Gnivc.Fias.Signature._settings.Style.SelectedCertificate)
          , n = t.data("cert-thumbprint")
          , a = t.data("cert-body")
          , r = t.data("cert-public-algorithm");
        t.hasClass(e.Gnivc.Fias.Signature._settings.Style.InvalidCertificate) ? e.Gnivc.Fias.Signature.ShowError(t.attr("title")) : e.Gnivc.Fias.Signature._settings.onCertificateSelected(n, a, r, e.Gnivc.Fias.Signature._settings.Hashes) && setTimeout('$.Gnivc.Fias.Signature.StartSignHash("' + n + '", "' + r + '")', 10)
    }
    function a(i) {
        var t = e(this);
        e("." + e.Gnivc.Fias.Signature._settings.Style.CertsListItem).removeClass(e.Gnivc.Fias.Signature._settings.Style.SelectedCertificate),
        t.addClass(e.Gnivc.Fias.Signature._settings.Style.SelectedCertificate),
        t.hasClass(e.Gnivc.Fias.Signature._settings.Style.InvalidCertificate) ? e("." + e.Gnivc.Fias.Signature._settings.Style.SelectButton).hide() : e("." + e.Gnivc.Fias.Signature._settings.Style.SelectButton).show()
    }
    function r(i, t) {
        e.Gnivc.Fias.Signature._settings.onPluginChecked(i, t) && (i ? null == e.Gnivc.Fias.Signature._settings.CertificateThumbprintToSign || 0 == e.trim(e.Gnivc.Fias.Signature._settings.CertificateThumbprintToSign).length || null == e.Gnivc.Fias.Signature._settings.CertificateAlgorithmToSign || 0 == e.trim(e.Gnivc.Fias.Signature._settings.CertificateAlgorithmToSign).length ? setTimeout("$.Gnivc.Fias.Signature.OpenCertificateSelector();", 500) : setTimeout("$.Gnivc.Fias.Signature.StartSignHash('" + e.Gnivc.Fias.Signature._settings.CertificateThumbprintToSign + "', '" + e.Gnivc.Fias.Signature._settings.CertificateAlgorithmToSign + "')", 500) : e.Gnivc.Fias.Signature.ShowError(t))
    }
    function s() {
        navigator.userAgent.match(/Edge\/./i) ? r(!1, "navigator.userAgent.match Edge - Браузер Microsoft Edge не поддерживается") : window.cadesplugin ? window.Promise ? cadesplugin.then((function() {
            r(!0, "ok")
        }
        ), (function(e) {
            r(!1, "cadesplugin.then error - КриптоПро ЭЦП Browser plug-in не загружен [" + e + "]")
        }
        )) : (window.addEventListener("message", (function(e) {
            "cadesplugin_loaded" === e.data ? r(!0, "ok") : "cadesplugin_load_error" === e.data && r(!1, "cadesplugin_load_error - КриптоПро ЭЦП Browser plug-in не загружен")
        }
        ), !1),
        window.postMessage("cadesplugin_echo_request", "*")) : r(!1, "!window.cadesplugin - файл cadesplugin_api.js не загружен")
    }
    function c(i, t) {
        e.Gnivc.Fias.Signature._settings.onHashSigned(i, t) && (null !== e.Gnivc.Fias.Signature._settings.SendSignatureToUrl && "" !== e.Gnivc.Fias.Signature._settings.SendSignatureToUrl ? (e.Gnivc.Fias.Signature.CloseCertificateSelector(),
        e.Gnivc.Fias.Signature.ShowModalMessage("Ваша подпись проверяется..."),
        e.ajax({
            url: e.Gnivc.Fias.Signature._settings.SendSignatureToUrl,
            type: "POST",
            xhrFields: {
                withCredentials: !0
            },
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({
                Signature: t,
                SignatureType: e.Gnivc.Fias.Signature._settings.SignatureType
            })
        }).done((function(i, t, n) {
            !function(i, t, n) {
                if (!e.Gnivc.Fias.Signature._settings.onSignatureSent(i, t, n))
                    return;
                if (!1 === i.result)
                    return e.Gnivc.Fias.Signature.HideModalMessage(),
                    void e.Gnivc.Fias.Signature.ShowError(i.error);
                switch (e.Gnivc.Fias.Signature.ShowModalMessage("Ваша подпись проверена."),
                e.Gnivc.Fias.Signature._settings.SignatureType) {
                case e.Gnivc.Fias.Signature.signPageTypeEnum.upload:
                    e.Gnivc.Fias.Signature.HideModalMessage(),
                    e("[name='" + i.number + ".Signature']").val(i.signature);
                    var a = e('[name="' + i.number + '.FileInfo"]')
                      , r = JSON.parse(Base64.decode(a.val()));
                    r.Signature = i.signature,
                    a.val(Base64.encode(JSON.stringify(r)));
                    break;
                case e.Gnivc.Fias.Signature.signPageTypeEnum.register225n:
                    e.Gnivc.Fias.Signature.HideModalMessage(),
                    e("form").replaceWith(i.data);
                    break;
                case e.Gnivc.Fias.Signature.signPageTypeEnum.login:
                    location.href = i.href;
                    break;
                default:
                    location.reload()
                }
            }(i, t, n)
        }
        )).fail((function(i, t, n) {
            e.Gnivc.Fias.Signature.HideModalMessage(),
            e.Gnivc.Fias.Signature.ShowError("Отправка подписи на сервер закончилась неудачно. <br />[time:" + new Date + "]<br />[textStatus:" + t + "]<br />[status:" + i.status + "]<br />[statusText:" + i.statusText + "]<br />[Url:" + e.Gnivc.Fias.Signature._settings.SendSignatureToUrl + "]<h5>responseText:<h5><textarea>" + i.responseText + "</textarea>")
        }
        ))) : e.Gnivc.Fias.Signature.ShowError("Адрес отправки подписи не указан"))
    }
    e.Gnivc = e.Gnivc || {},
    e.Gnivc.Fias = e.Gnivc.Fias || {},
    e.Gnivc.Fias.Signature = function(r) {
        e.Gnivc.Fias.Signature._settings = e.extend(!0, {}, e.Gnivc.Fias.Signature.Defaults, r),
        e("." + e.Gnivc.Fias.Signature._settings.Style.CertificateList).off("click", "li"),
        e("." + e.Gnivc.Fias.Signature._settings.Style.CancelButton).off("click"),
        e("." + e.Gnivc.Fias.Signature._settings.Style.SelectButton).off("click"),
        e("." + e.Gnivc.Fias.Signature._settings.Style.RetryButton).off("click"),
        e("." + e.Gnivc.Fias.Signature._settings.Style.ModalWindowCertificateListWrapper).remove(),
        e("body").append("<div class='" + e.Gnivc.Fias.Signature._settings.Style.ModalWindowCertificateListWrapper + "' style='display:none'><div class='login-modal-overlay'></div><div class='login-modal-window'><div class='modal-header'><h3>Выбор сертификата</h3></div><div class='modal-body'><div class='" + e.Gnivc.Fias.Signature._settings.Style.CertificateList + "'><ul></ul></div></div><div class='modal-footer'><button type='button' class='k-button " + e.Gnivc.Fias.Signature._settings.Style.CancelButton + "' " + (e.Gnivc.Fias.Signature._settings.NeedCancelButton ? "" : "style='display:none'") + ">Отмена</button><button type='button' class='k-button " + e.Gnivc.Fias.Signature._settings.Style.SelectButton + "' style='display:none'>Выбрать</button><button type='button' class='k-button " + e.Gnivc.Fias.Signature._settings.Style.RetryButton + "' style='display:none'>Попробовать еще раз</button></div></div><div class='cert-overlay'></div></div><div class='" + e.Gnivc.Fias.Signature._settings.Style.ModalWindowMessageWrapper + " cert-overlay' style='display:none'><div class='cert-overlay-text'></div></div>"),
        e("." + e.Gnivc.Fias.Signature._settings.Style.CancelButton).on("click", i),
        e("." + e.Gnivc.Fias.Signature._settings.Style.RetryButton).on("click", t),
        e("." + e.Gnivc.Fias.Signature._settings.Style.SelectButton).on("click", n),
        e("." + e.Gnivc.Fias.Signature._settings.Style.CertificateList).on("click", "li", a),
        s()
    }
    ,
    e.Gnivc.Fias.Signature.ShowError = function(i) {
        e.Gnivc.Fias.Signature._settings.onShowError(i) && (e(".login-modal-window .modal-header h3").text("Произошла ошибка"),
        e("." + e.Gnivc.Fias.Signature._settings.Style.CertificateList).addClass("cert-error").html(i).append("<div class='ecp-helplink'>Проверьте настройку рабочего окружения и корректность работы Крипто - про на соответствие приложенным ниже инструкциям, в случае успешного прохождения проверок - обратитесь в службу поддержки (fias@gnivc.ru) и приложите скриншот <br /> <br /> <a href='" + e.Gnivc.Fias.Signature._settings.RegisterPortalUrl + "Signature/Guide'>Инструкция по настройке КриптоПро ЭЦП</a> <br /> <br /> <a href='" + e.Gnivc.Fias.Signature._settings.RegisterPortalUrl + "Signature/Check'>Пройти проверку настройки рабочего окружения</a> <br /> <br /> Более подробное описание ошибки вы можете поискать на странице <a href = '" + e.Gnivc.Fias.Signature._settings.RegisterPortalUrl + "Help'>«Часто задаваемые вопросы»</a></div>"),
        e("." + e.Gnivc.Fias.Signature._settings.Style.CancelButton).hide(),
        e("." + e.Gnivc.Fias.Signature._settings.Style.SelectButton).hide(),
        e("." + e.Gnivc.Fias.Signature._settings.Style.RetryButton).show(),
        e("." + e.Gnivc.Fias.Signature._settings.Style.ModalWindowCertificateListWrapper).show(),
        e.Gnivc.Fias.Signature.HideModalMessage())
    }
    ,
    e.Gnivc.Fias.Signature.HideError = function() {
        e(".login-modal-window .modal-header h3").text("Выбор сертификата"),
        e("." + e.Gnivc.Fias.Signature._settings.Style.CertificateList).removeClass("cert-error"),
        e("." + e.Gnivc.Fias.Signature._settings.Style.CertificateList).html("<ul></ul>"),
        e.Gnivc.Fias.Signature._settings.NeedCancelButton && e("." + e.Gnivc.Fias.Signature._settings.Style.CancelButton).show(),
        e("." + e.Gnivc.Fias.Signature._settings.Style.SelectButton).show(),
        e("." + e.Gnivc.Fias.Signature._settings.Style.RetryButton).hide()
    }
    ,
    e.Gnivc.Fias.Signature.ShowProgressBar = function(i, t) {
        if (0 == e(".load-cert-text").length) {
            var n = "<div class='load-cert-text'><h3 style='text-align:center;'><span class='load-cert-message'>" + i + "</span><div class='cssProgress'><div class='progress1'><div class='cssProgress-bar cssProgress-active' style='transition: none 0s ease 0s; width: " + parseInt(t) + "%;'><span class='cssProgress-label'>" + t + "%</span></div></div></div></h3></div>";
            e("." + e.Gnivc.Fias.Signature._settings.Style.CertificateList).prepend(n)
        } else
            e(".load-cert-message").text(i),
            e(".load-cert-text .cssProgress-bar").width(t + "%"),
            e(".load-cert-text .cssProgress-label").text(t)
    }
    ,
    e.Gnivc.Fias.Signature.HideProgressBar = function() {
        e(".load-cert-text").remove()
    }
    ,
    e.Gnivc.Fias.Signature.ShowModalMessage = function(i) {
        if (e.Gnivc.Fias.Signature._settings.onModalMessage(i)) {
            var t = e("." + e.Gnivc.Fias.Signature._settings.Style.ModalWindowMessageWrapper);
            0 !== t.length ? (t.show(),
            t.find(".cert-overlay-text").text(i)) : e.Gnivc.Fias.Signature.ShowError("Окно с оверлеем ожидания не найдено")
        }
    }
    ,
    e.Gnivc.Fias.Signature.HideModalMessage = function() {
        var i = e("." + e.Gnivc.Fias.Signature._settings.Style.ModalWindowMessageWrapper);
        0 !== i.length ? i.hide() : e.Gnivc.Fias.Signature.ShowError("Окно с оверлеем ожидания не найдено")
    }
    ,
    e.Gnivc.Fias.Signature.CloseCertificateSelector = function() {
        e("." + e.Gnivc.Fias.Signature._settings.Style.ModalWindowCertificateListWrapper).hide()
    }
    ,
    e.Gnivc.Fias.Signature.OpenCertificateSelector = function() {
        e.Gnivc.Fias.Signature.HideError(),
        e("." + e.Gnivc.Fias.Signature._settings.Style.SelectButton).hide(),
        e.Gnivc.Fias.Signature.ShowProgressBar("Загрузка списка ваших сертификатов", 0),
        e("." + e.Gnivc.Fias.Signature._settings.Style.ModalWindowCertificateListWrapper).show();
        var i = e("." + e.Gnivc.Fias.Signature._settings.Style.CertificateList + " ul");
        e.Gnivc.Fias.Signature.FillCertList(i, (function(e, i) {}
        ))
    }
    ,
    e.Gnivc.Fias.Signature.FillCertList = function(i, t) {
        !!cadesplugin.CreateObjectAsync ? Gnivc_Fias_Signature_Async_FillCertList(i, t) : function(i, t) {
            var n = null
              , a = 0
              , r = null
              , s = null
              , c = null
              , o = null
              , l = 0
              , u = 0
              , g = [];
            try {
                if (i.empty(),
                o = "Ошибка при открытии хранилища: ",
                (n = cadesplugin.CreateObject("CAdESCOM.Store")).Open(),
                o = "Ошибка при получении коллекции сертификатов: ",
                !(r = n.Certificates))
                    throw "Объект или свойство не найдено. (0x80092004)";
                if (o = "Ошибка при определении количества сертификатов: ",
                null === (a = r.Count))
                    throw "Объект или свойство не найдено. (0x80092004)";
                if (0 === a)
                    throw "Сертификаты не найдены в системе";
                l = 10,
                e.Gnivc.Fias.Signature.ShowProgressBar("Загрузка списка ваших сертификатов", l),
                u = 90 / a;
                for (var d = 1; d <= a; d++) {
                    o = "Ошибка при перечислении сертификатов: ",
                    s = r.Item(d),
                    o = "Ошибка при получении свойств сертификата: ";
                    var _ = s.PublicKey().Algorithm;
                    c = new e.Gnivc.Fias.Certificate({
                        Thumbprint: s.Thumbprint,
                        ValidFromDate: s.ValidFromDate,
                        ValidToDate: s.ValidToDate,
                        SubjectName: s.SubjectName,
                        IssuerName: s.IssuerName,
                        HasPrivateKey: s.HasPrivateKey(),
                        PublicKey_Algorithm_FriendlyName: _.FriendlyName,
                        PublicKey_Algorithm_OID: _.Value,
                        Base64String: s.Export(cadesplugin.CADESCOM_ENCODE_BASE64)
                    }),
                    g.push(c);
                    var p = e("<li></li>").data("cert-thumbprint", c.Thumbprint()).data("cert-body", c.Base64String()).data("cert-public-algorithm", c.GetPubKeyAlgorithmOID()).html("<div class='cert-name'>" + c.GetCertName() + "</div> <div class='cert-publisher'>Поставщик: " + c.GetIssuer() + "</div> <div class='cert-date-end'>Действителен до: " + c.GetCertTillDate() + "</div>").addClass("cert-item");
                    c.IsValid(p) ? i.prepend(p) : i.append(p),
                    l += u,
                    e.Gnivc.Fias.Signature.ShowProgressBar("Загрузка списка ваших сертификатов", l)
                }
                n.Close(),
                e.Gnivc.Fias.Signature.HideProgressBar(),
                t(g, null)
            } catch (i) {
                n && n.Close(),
                e.Gnivc.Fias.Signature.ShowError(o + e.Gnivc.Fias.Signature.GetErrorMessage(i)),
                t(g, o + e.Gnivc.Fias.Signature.GetErrorMessage(i))
            }
        }(i, t)
    }
    ,
    e.Gnivc.Fias.Signature.CAdESCOMAbout = function(e) {
        !!cadesplugin.CreateObjectAsync ? Gnivc_Fias_Signature_Async_CAdESCOMAbout(e) : function(e) {
            var i, t = {
                Version_CryptoPlugin: null,
                Prov_75: null,
                Prov_80: null,
                Prov_81: null,
                Version_CryptoPlugin_Error: null,
                Prov_75_Error: null,
                Prov_80_Error: null,
                Prov_81_Error: null
            };
            try {
                i = "Version_CryptoPlugin_Error";
                var n = cadesplugin.CreateObject("CAdESCOM.About");
                t.Version_CryptoPlugin = n.PluginVersion,
                t.Version_CryptoPlugin || (t.Version_CryptoPlugin = n.Version),
                i = "Prov_75_Error",
                t.Prov_75 = n.CSPName(75) + " " + n.CSPVersion("", 75),
                i = "Prov_80_Error",
                t.Prov_80 = n.CSPName(80) + " " + n.CSPVersion("", 80),
                i = "Prov_81_Error",
                t.Prov_81 = n.CSPName(81) + " " + n.CSPVersion("", 81)
            } catch (e) {
                t[i] = e.message
            }
            e(t)
        }(e)
    }
    ,
    e.Gnivc.Fias.Signature.GetErrorMessage = function(e) {
        var i = e.message;
        return i ? e.number && (i += " (0x" + function(e) {
            e < 0 && (e = 4294967295 + e + 1);
            return e.toString(16).toUpperCase()
        }(e.number) + ")") : i = e,
        i
    }
    ,
    e.Gnivc.Fias.Signature.StartSignHash = function(i, t) {
        var n = e.Gnivc.Fias.Signature._settings.Hashes[t];
        n ? !cadesplugin.CreateObjectAsync ? function(i, t, n, a) {
            var r = n
              , s = i
              , c = t
              , o = null
              , l = null
              , u = null
              , g = null
              , d = null;
            if (null === s || 0 === s.length)
                return void e.Gnivc.Fias.Signature.ShowError("Ошибка при создании подписи - Сертификат не выбран");
            if (null === c || 0 === c.length)
                return void e.Gnivc.Fias.Signature.ShowError("Ошибка при создании подписи - Алгоритм сертификата не указан");
            if (null === r || 0 === r.length)
                return void e.Gnivc.Fias.Signature.ShowError("Ошибка при создании подписи - Хеш-значение не передано");
            try {
                l = cadesplugin.CreateObject("CAdESCOM.Store")
            } catch (i) {
                return void e.Gnivc.Fias.Signature.ShowError("Ошибка при создании подписи - Failed to create CAdESCOM.Store: " + e.Gnivc.Fias.Signature.GetErrorMessage(i))
            }
            if (!l)
                return void e.Gnivc.Fias.Signature.ShowError("Ошибка при создании подписи - Failed to create CAdESCOM.Store. NULL");
            try {
                l.Open()
            } catch (i) {
                return void e.Gnivc.Fias.Signature.ShowError("Ошибка при создании подписи - Failed to open CAdESCOM.Store: " + e.Gnivc.Fias.Signature.GetErrorMessage(i))
            }
            var _ = l.Certificates.Find(cadesplugin.CAPICOM_CERTIFICATE_FIND_SHA1_HASH, s);
            if (0 === _.Count)
                return void e.Gnivc.Fias.Signature.ShowError("Ошибка при создании подписи - Сертификат не найден в хранилище");
            try {
                o = cadesplugin.CreateObject("CAdESCOM.HashedData")
            } catch (i) {
                return void e.Gnivc.Fias.Signature.ShowError("Ошибка при создании подписи - Failed to create CAdESCOM.HashedData: " + e.Gnivc.Fias.Signature.GetErrorMessage(i))
            }
            if (!o)
                return void e.Gnivc.Fias.Signature.ShowError("Ошибка при создании подписи - Failed to create CAdESCOM.HashedData. NULL");
            switch (c) {
            case "1.2.643.7.1.1.1.1":
                o.Algorithm = cadesplugin.CADESCOM_HASH_ALGORITHM_CP_GOST_3411_2012_256;
                break;
            case "1.2.643.7.1.1.1.2":
                o.Algorithm = cadesplugin.CADESCOM_HASH_ALGORITHM_CP_GOST_3411_2012_512;
                break;
            default:
                o.Algorithm = cadesplugin.CADESCOM_HASH_ALGORITHM_CP_GOST_3411
            }
            o.SetHashValue(r);
            try {
                u = cadesplugin.CreateObject("CAdESCOM.CPSigner")
            } catch (i) {
                return void e.Gnivc.Fias.Signature.ShowError("Ошибка при создании подписи - Failed to create CAdESCOM.CPSigner: " + e.Gnivc.Fias.Signature.GetErrorMessage(i))
            }
            if (!u)
                return void e.Gnivc.Fias.Signature.ShowError("Ошибка при создании подписи - Failed to create CAdESCOM.CPSigner. NULL");
            try {
                oSigningTimeAttr = cadesplugin.CreateObject("CAdESCOM.CPAttribute")
            } catch (i) {
                return void e.Gnivc.Fias.Signature.ShowError("Ошибка при создании подписи - Failed to create CAdESCOM.CPAttribute: " + e.Gnivc.Fias.Signature.GetErrorMessage(i))
            }
            if (!oSigningTimeAttr)
                return void e.Gnivc.Fias.Signature.ShowError("Ошибка при создании подписи - Failed to create CAdESCOM.CPAttribute. NULL");
            try {
                oDocumentNameAttr = cadesplugin.CreateObject("CAdESCOM.CPAttribute")
            } catch (i) {
                return void e.Gnivc.Fias.Signature.ShowError("Ошибка при создании подписи - Failed to create CAdESCOM.CPAttribute: " + e.Gnivc.Fias.Signature.GetErrorMessage(i))
            }
            if (!oDocumentNameAttr)
                return void e.Gnivc.Fias.Signature.ShowError("Ошибка при создании подписи - Failed to create CAdESCOM.CPAttribute. NULL");
            try {
                d = cadesplugin.CreateObject("CAdESCOM.CadesSignedData")
            } catch (i) {
                return void e.Gnivc.Fias.Signature.ShowError("Ошибка при создании подписи - Failed to create CAdESCOM.CadesSignedData: " + e.Gnivc.Fias.Signature.GetErrorMessage(i))
            }
            if (!d)
                return void e.Gnivc.Fias.Signature.ShowError("Ошибка при создании подписи - Failed to create CAdESCOM.CadesSignedData. NULL");
            try {
                u.Certificate = _.Item(1),
                "undefined" != typeof setDisplayData && (d.DisplayData = 1);
                try {
                    g = d.SignHash(o, u, cadesplugin.CADESCOM_CADES_BES)
                } catch (i) {
                    return void e.Gnivc.Fias.Signature.ShowError("Не удалось создать подпись из-за ошибки: " + e.Gnivc.Fias.Signature.GetErrorMessage(i))
                }
                a(t, g)
            } catch (i) {
                e.Gnivc.Fias.Signature.ShowError("Ошибка при создании подписи: " + e.Gnivc.Fias.Signature.GetErrorMessage(i))
            }
        }(i, t, n, c) : Gnivc_Fias_Signature_Async_SignHash(i, t, n, c) : e.Gnivc.Fias.Signature.ShowError("Хэш-значения не подходят к алгоритму подписи сертификата")
    }
    ,
    e.Gnivc.Fias.Signature.ConvertDate = function(e) {
        switch (navigator.appName) {
        case "Microsoft Internet Explorer":
            return e.getVarDate();
        default:
            return e
        }
    }
    ,
    e.Gnivc.Fias.Signature.signPageTypeEnum = {
        notice: 0,
        requestRegister: 1,
        register225n: 2,
        login: 3,
        upload: 4
    },
    e.Gnivc.Fias.Signature.Defaults = {
        onCertificateSelectorClosed: function() {},
        onCertificateSelected: function(e, i, t, n) {
            return !0
        },
        onHashSigned: function(e, i) {
            return !0
        },
        onModalMessage: function(e) {
            return !0
        },
        onShowError: function(e) {
            return !0
        },
        onSignatureSent: function(e, i, t) {
            return !0
        },
        onPluginChecked: function(e, i) {
            return !0
        },
        Style: {
            SelectedCertificate: "cert-selected",
            InvalidCertificate: "cert-invalid",
            CertificateList: "certs-list",
            CertsListItem: "cert-item",
            ModalWindowMessageWrapper: "modal-message-wrapper",
            ModalWindowCertificateListWrapper: "login-modal-window-wrapper",
            CancelButton: "login-modal-window-cancel",
            SelectButton: "login-modal-window-select",
            RetryButton: "login-modal-window-retry"
        },
        Hashes: {},
        CertificateThumbprintToSign: "",
        CertificateAlgorithmToSign: "",
        NeedCancelButton: !0,
        SendSignatureToUrl: "",
        SignatureType: e.Gnivc.Fias.Signature.signPageTypeEnum.login,
        RegisterPortalUrl: "https://fias-register.nalog.ru/"
    }
}(jQuery);
